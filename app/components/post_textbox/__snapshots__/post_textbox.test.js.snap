// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostTextBox should match, full snapshot 1`] = `
<React.Fragment>
  <Connect(Typing) />
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#ffffff",
          "borderTopColor": "rgba(61,60,64,0.2)",
          "borderTopWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
        },
        null,
      ]
    }
  >
    <ScrollView
      contentContainerStyle={
        Object {
          "alignItems": "stretch",
        }
      }
      disableScrollViewPanResponder={true}
      keyboardShouldPersistTaps="always"
      overScrollMode="never"
      pinchGestureEnabled={false}
      scrollEnabled={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      style={
        Array [
          Object {
            "flex": 1,
            "flexDirection": "column",
          },
        ]
      }
    >
      <ForwardRef(WrappedPasteableTextInput)
        blurOnSubmit={false}
        disableFullscreenUI={true}
        editable={true}
        keyboardAppearance="light"
        keyboardType="default"
        multiline={true}
        onChangeText={[Function]}
        onEndEditing={[Function]}
        onPaste={[Function]}
        onSelectionChange={[Function]}
        placeholder="Write to Test Channel"
        placeholderTextColor="rgba(61,60,64,0.5)"
        style={
          Object {
            "color": "#3d3c40",
            "fontSize": 16,
            "lineHeight": 22,
            "maxHeight": 150,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 58,
            "paddingTop": 8,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <Connect(FileUploadPreview)
        files={Array []}
        rootId=""
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
        >
          <TouchableOpacity
            activeOpacity={0.2}
            disabled={false}
            onPress={[Function]}
            style={
              Object {
                "marginLeft": 5,
                "marginRight": 5,
                "padding": 5,
              }
            }
          >
            <Icon
              allowFontScaling={false}
              color="rgba(61,60,64,0.64)"
              name="at"
              size={22}
            />
          </TouchableOpacity>
          <TouchableOpacity
            activeOpacity={0.2}
            disabled={false}
            onPress={[Function]}
            style={
              Object {
                "marginLeft": 5,
                "marginRight": 5,
                "padding": 5,
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../dist/assets/images/icons/slash-forward-box.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 22,
                    "opacity": 1,
                    "tintColor": "rgba(61,60,64,0.64)",
                    "width": 22,
                  },
                ]
              }
            />
          </TouchableOpacity>
          <FileUploadButton
            blurTextBox={[Function]}
            browseFileTypes="public.item"
            buttonContainerStyle={
              Object {
                "marginLeft": 5,
                "marginRight": 5,
                "padding": 5,
              }
            }
            canBrowseFiles={true}
            canBrowsePhotoLibrary={true}
            canBrowseVideoLibrary={true}
            canTakePhoto={true}
            canTakeVideo={true}
            extraOptions={null}
            fileCount={0}
            maxFileCount={5}
            maxFileSize={1024}
            onShowFileMaxWarning={[Function]}
            onShowFileSizeWarning={[Function]}
            theme={
              Object {
                "awayIndicator": "#ffbc42",
                "buttonBg": "#166de0",
                "buttonColor": "#ffffff",
                "centerChannelBg": "#ffffff",
                "centerChannelColor": "#3d3c40",
                "codeTheme": "github",
                "dndIndicator": "#f74343",
                "errorTextColor": "#fd5960",
                "linkColor": "#2389d7",
                "mentionBg": "#ffffff",
                "mentionBj": "#ffffff",
                "mentionColor": "#145dbf",
                "mentionHighlightBg": "#ffe577",
                "mentionHighlightLink": "#166de0",
                "newMessageSeparator": "#ff8800",
                "onlineIndicator": "#06d6a0",
                "sidebarBg": "#145dbf",
                "sidebarHeaderBg": "#1153ab",
                "sidebarHeaderTextColor": "#ffffff",
                "sidebarText": "#ffffff",
                "sidebarTextActiveBorder": "#579eff",
                "sidebarTextActiveColor": "#ffffff",
                "sidebarTextHoverBg": "#4578bf",
                "sidebarUnreadText": "#ffffff",
                "type": "Mattermost",
              }
            }
            uploadFiles={[Function]}
            validMimeTypes={Array []}
          />
          <ImageUploadButton
            blurTextBox={[Function]}
            browseFileTypes="public.item"
            buttonContainerStyle={
              Object {
                "marginLeft": 5,
                "marginRight": 5,
                "padding": 5,
              }
            }
            canBrowseFiles={true}
            canBrowsePhotoLibrary={true}
            canBrowseVideoLibrary={true}
            canTakePhoto={true}
            canTakeVideo={true}
            extraOptions={null}
            fileCount={0}
            maxFileCount={5}
            maxFileSize={1024}
            onShowFileMaxWarning={[Function]}
            onShowFileSizeWarning={[Function]}
            theme={
              Object {
                "awayIndicator": "#ffbc42",
                "buttonBg": "#166de0",
                "buttonColor": "#ffffff",
                "centerChannelBg": "#ffffff",
                "centerChannelColor": "#3d3c40",
                "codeTheme": "github",
                "dndIndicator": "#f74343",
                "errorTextColor": "#fd5960",
                "linkColor": "#2389d7",
                "mentionBg": "#ffffff",
                "mentionBj": "#ffffff",
                "mentionColor": "#145dbf",
                "mentionHighlightBg": "#ffe577",
                "mentionHighlightLink": "#166de0",
                "newMessageSeparator": "#ff8800",
                "onlineIndicator": "#06d6a0",
                "sidebarBg": "#145dbf",
                "sidebarHeaderBg": "#1153ab",
                "sidebarHeaderTextColor": "#ffffff",
                "sidebarText": "#ffffff",
                "sidebarTextActiveBorder": "#579eff",
                "sidebarTextActiveColor": "#ffffff",
                "sidebarTextHoverBg": "#4578bf",
                "sidebarUnreadText": "#ffffff",
                "type": "Mattermost",
              }
            }
            uploadFiles={[Function]}
            validMimeTypes={Array []}
          />
          <AttachmentButton
            blurTextBox={[Function]}
            buttonContainerStyle={
              Object {
                "marginLeft": 5,
                "marginRight": 5,
                "padding": 5,
              }
            }
            canTakePhoto={true}
            canTakeVideo={true}
            fileCount={0}
            maxFileCount={5}
            maxFileSize={1024}
            onShowFileMaxWarning={[Function]}
            onShowFileSizeWarning={[Function]}
            theme={
              Object {
                "awayIndicator": "#ffbc42",
                "buttonBg": "#166de0",
                "buttonColor": "#ffffff",
                "centerChannelBg": "#ffffff",
                "centerChannelColor": "#3d3c40",
                "codeTheme": "github",
                "dndIndicator": "#f74343",
                "errorTextColor": "#fd5960",
                "linkColor": "#2389d7",
                "mentionBg": "#ffffff",
                "mentionBj": "#ffffff",
                "mentionColor": "#145dbf",
                "mentionHighlightBg": "#ffe577",
                "mentionHighlightLink": "#166de0",
                "newMessageSeparator": "#ff8800",
                "onlineIndicator": "#06d6a0",
                "sidebarBg": "#145dbf",
                "sidebarHeaderBg": "#1153ab",
                "sidebarHeaderTextColor": "#ffffff",
                "sidebarText": "#ffffff",
                "sidebarTextActiveBorder": "#579eff",
                "sidebarTextActiveColor": "#ffffff",
                "sidebarTextHoverBg": "#4578bf",
                "sidebarUnreadText": "#ffffff",
                "type": "Mattermost",
              }
            }
            uploadFiles={[Function]}
            validMimeTypes={Array []}
          />
        </View>
        <SendButton
          disabled={true}
          handleSendMessage={[Function]}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBg": "#ffffff",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
        />
      </View>
    </ScrollView>
  </View>
</React.Fragment>
`;
